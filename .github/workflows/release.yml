name: Flutter Production Release - TestFlight & Play Store

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.
  workflow_dispatch:  # Manual trigger
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        default: '1.0.0'
      release_notes:
        description: 'Release notes'
        required: false
        default: 'Bug fixes and improvements'

jobs:
  build-android-release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.2'
        channel: 'stable'
    
    - name: Install dependencies
      run: flutter pub get
    
    - name: Build Android App Bundle (AAB)
      run: flutter build appbundle --release
      env:
        ANDROID_SDK_ROOT: /usr/lib/android-sdk
    
    - name: Sign AAB
      uses: r0adkll/sign-android-release@v1
      with:
        releaseDirectory: build/app/outputs/bundle/release
        signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
        alias: ${{ secrets.ANDROID_KEY_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        keyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}
    
    - name: Upload to Google Play Console
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
        packageName: com.example.flutterRiverpodTutorial1
        releaseFiles: build/app/outputs/bundle/release/app-release.aab
        track: internal  # Change to 'production' for live release
        status: completed
        inAppUpdatePriority: 2
        whatsNewDirectory: distribution/whatsnew

  build-ios-release:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Setup CocoaPods
        run: |
          cd ios
          pod install --repo-update
      
      - name: Install Apple certificate and provisioning profile
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_DISTRIBUTION_P12_BASE64 }}
          p12-password: ${{ secrets.IOS_DISTRIBUTION_P12_PASSWORD }}
          keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}
      
      - name: Install App Store provisioning profile
        run: |
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          echo "${{ secrets.IOS_APPSTORE_PROVISIONING_PROFILE }}" | base64 --decode > /tmp/appstore_profile.mobileprovision
          UUID=$(security cms -D -i /tmp/appstore_profile.mobileprovision | plutil -extract UUID raw -)
          cp /tmp/appstore_profile.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles/$UUID.mobileprovision
      
      - name: Configure Xcode for App Store release
        run: |
          # For App Store release, we use distribution signing
          PROFILE_FILE=$(ls ~/Library/MobileDevice/Provisioning\ Profiles/*.mobileprovision | head -1)
          PROFILE_NAME=$(security cms -D -i "$PROFILE_FILE" | plutil -extract Name raw -)
          ESCAPED_PROFILE_NAME=$(printf '%s\n' "$PROFILE_NAME" | sed 's/[[\.*^$()+?{|]/\\&/g')
          
          sed -i '' 's/CODE_SIGN_STYLE = Automatic/CODE_SIGN_STYLE = Manual/g' ios/Runner.xcodeproj/project.pbxproj
          sed -i '' "s/PROVISIONING_PROFILE_SPECIFIER = \"[^\"]*\"/PROVISIONING_PROFILE_SPECIFIER = \"$ESCAPED_PROFILE_NAME\"/g" ios/Runner.xcodeproj/project.pbxproj
          
          # Set distribution code signing identity
          sed -i '' 's/CODE_SIGN_IDENTITY = "Apple Development"/CODE_SIGN_IDENTITY = "Apple Distribution"/g' ios/Runner.xcodeproj/project.pbxproj
      
      - name: Build IPA for App Store
        run: |
          PROFILE_FILE=$(ls ~/Library/MobileDevice/Provisioning\ Profiles/*.mobileprovision | head -1)
          PROFILE_UUID=$(basename "$PROFILE_FILE" .mobileprovision)
          
          cat > ios/ExportOptions.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>destination</key>
              <string>export</string>
              <key>method</key>
              <string>app-store</string>
              <key>signingStyle</key>
              <string>manual</string>
              <key>provisioningProfiles</key>
              <dict>
                  <key>com.example.flutterRiverpodTutorial1</key>
                  <string>$PROFILE_UUID</string>
              </dict>
              <key>stripSwiftSymbols</key>
              <true/>
              <key>teamID</key>
              <string>66VPE47DN4</string>
              <key>uploadBitcode</key>
              <false/>
              <key>uploadSymbols</key>
              <true/>
          </dict>
          </plist>
          EOF
          
          flutter build ipa --release --export-options-plist=ios/ExportOptions.plist
      
      - name: Upload to TestFlight
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: build/ios/ipa/flutter_riverpod_tutorial.ipa
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
          
      - name: Upload IPA as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-release-app
          path: build/ios/ipa/flutter_riverpod_tutorial.ipa
          retention-days: 30

  create-github-release:
    needs: [build-android-release, build-ios-release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Android AAB
        uses: actions/download-artifact@v4
        with:
          name: android-aab
          path: ./android/
          
      - name: Download iOS IPA
        uses: actions/download-artifact@v4
        with:
          name: ios-release-app
          path: ./ios/
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ## What's Changed
            ${{ github.event.inputs.release_notes || 'Bug fixes and improvements' }}
            
            ## Downloads
            - **Android**: Available on Google Play Store
            - **iOS**: Available on TestFlight and App Store
            
            ## Build Information
            - **Commit**: ${{ github.sha }}
            - **Build Date**: ${{ github.event.head_commit.timestamp }}
          files: |
            android/*.aab
            ios/*.ipa
          draft: false
          prerelease: false
